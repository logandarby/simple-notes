{"version":3,"sources":["modules/notes/context.ts","globals.ts","modules/notes/provider.tsx","components/Button.tsx","components/Input.tsx","components/Form.tsx","pages/Login.tsx","pages/notes/Header.tsx","pages/notes/SearchBar.tsx","modules/noteModal/context.ts","modules/noteModal/use.ts","modules/notes/use.ts","pages/notes/AddNoteButton.tsx","pages/notes/notesGrid/NoteContainer.tsx","pages/notes/NotesGrid.tsx","pages/Notes.tsx","components/IconButton.tsx","components/IconButtonBar.tsx","modules/noteModal/NoteModal.tsx","utils/customHooks.ts","modules/noteModal/provider.tsx","pages/Register.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NotesContext","createContext","state","notes","actions","createNote","updateNote","note","console","log","deleteNote","API_HOST","process","API_PORT","API_URL","NotesProvider","children","useState","setNotes","history","useHistory","useEffect","fetch","method","credentials","then","res","status","push","json","a","noteRequest","title","contents","headers","body","JSON","stringify","newNote","updatedNote","id","newNoteArray","map","originalNote","value","deletedNote","newNotesArray","filter","Provider","Button","className","text","rest","Input","Form","onSubmit","submitText","email","setEmail","password","setPassword","autoComplete","noValidate","event","preventDefault","htmlFor","name","onChange","currentTarget","type","toLowerCase","Login","isMounted","logout","handleSubmit","href","Header","props","onClick","SearchBar","searchQuery","setSearchQuery","src","alt","e","placeholder","NoteModalContext","openNoteModal","useNoteModal","useContext","useNotes","AddNoteButton","handleClick","NoteContainer","NotesGrid","filteredNotes","setFilteredNotes","filterNotes","query","noteTitle","noteContents","includes","length","Notes","IconButton","iconPath","IconButtonBar","NoteModal","ref","callback","setShow","setTitle","setContents","modalRef","useRef","containerRef","closeNoteModal","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","_handleEscKey","keyCode","useEscapeKey","debouncedSave","useCallback","debounce","maxWait","spellCheck","NoteModalProvider","setNote","show","Register","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.266240a1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { Note } from \"../../apiResources\";\r\n\r\ninterface NotesContextType {\r\n  state: {\r\n    notes: Note[];\r\n  };\r\n  actions: {\r\n    createNote: () => Promise<Note> | void;\r\n    updateNote: (note: Note) => void;\r\n    deleteNote: (note: Note) => void;\r\n  };\r\n}\r\n\r\nconst NotesContext = createContext<NotesContextType>({\r\n  state: { notes: [] },\r\n  actions: {\r\n    createNote: () => {},\r\n    updateNote: (note: Note) => {\r\n      console.log(\"The updateNote function isn't working\");\r\n    },\r\n    deleteNote: () => {},\r\n  },\r\n});\r\n\r\nexport default NotesContext;\r\n","const API_HOST = process.env.API_HOST ?? \"http://localhost\";\r\nconst API_PORT = process.env.API_PORT ?? 4000;\r\nexport const API_URL = `${API_HOST}:${API_PORT}`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Note } from \"../../apiResources\";\r\nimport NotesContext from \"./context\";\r\nimport { API_URL } from \"../../globals\";\r\n\r\nconst NotesProvider: React.FC<{}> = ({ children }) => {\r\n  const [notes, setNotes] = useState<Note[]>([]);\r\n  const history = useHistory();\r\n\r\n  // Fetch notes on component mount\r\n  useEffect(() => {\r\n    fetch(`${API_URL}/notes`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          history.push(\"/login\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((json) => {\r\n        setNotes(json);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const createNote = async () => {\r\n    const noteRequest = { title: \"\", contents: \"\" };\r\n    return await fetch(`${API_URL}/notes`, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(noteRequest),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((newNote: Note) => {\r\n        setNotes([newNote, ...notes]);\r\n        return newNote;\r\n      });\r\n  };\r\n\r\n  const updateNote = async (updatedNote: Note) => {\r\n    console.log(\"updating\");\r\n    const res = await fetch(`${API_URL}/notes/${updatedNote.id}`, {\r\n      method: \"PUT\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedNote),\r\n    });\r\n    console.log(res);\r\n    switch (res.status) {\r\n      case 400:\r\n        console.log(\"Update Note: Bad Request\");\r\n        break;\r\n      case 401:\r\n        console.log(\"Update Note: Note was not found\");\r\n        break;\r\n      case 200:\r\n        const newNoteArray = notes.map((originalNote) =>\r\n          updatedNote.id === originalNote.id ? updatedNote : originalNote\r\n        );\r\n        setNotes([...newNoteArray]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const deleteNote = async (deletedNote: Note) => {\r\n    console.log(\"deleting note\");\r\n    const res = await fetch(`${API_URL}/notes/${deletedNote.id}`, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    });\r\n    console.log(res);\r\n    switch (res.status) {\r\n      case 400:\r\n        console.log(\"Delete Note: Invalid request (Note ID)\");\r\n        break;\r\n      case 404:\r\n        console.log(\"Delete Note: Note was not found\");\r\n        break;\r\n      case 200:\r\n        console.log(\"Note successfully deleted\");\r\n        let newNotesArray = notes;\r\n        newNotesArray = newNotesArray.filter(\r\n          (originalNote) => originalNote.id !== deletedNote.id\r\n        );\r\n        console.log(newNotesArray);\r\n        setNotes([...newNotesArray]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    state: { notes },\r\n    actions: { createNote, updateNote, deleteNote },\r\n  };\r\n\r\n  return (\r\n    <NotesContext.Provider value={value}>{children}</NotesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NotesProvider;\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  text: string;\r\n}\r\n\r\nfunction Button({ className, text, ...rest }: ButtonProps) {\r\n  return (\r\n    <button className={`Button ${className}`} {...rest}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nexport interface InputProps extends React.HTMLProps<HTMLInputElement> {}\r\n\r\nfunction Input({ className, ...rest }: InputProps) {\r\n  return <input className={`Input ${className}`} {...rest} />;\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Form.scss\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\n\r\nexport interface FormBody {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport type FormSubmitFunction = (body: FormBody) => void;\r\n\r\nexport interface FormProps {\r\n  onSubmit?: FormSubmitFunction;\r\n  className?: string;\r\n  submitText?: string;\r\n}\r\n\r\nfunction Form({ className, onSubmit, submitText = \"submit\" }: FormProps) {\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const handlePasswordChange: React.FormEventHandler<HTMLInputElement> = (\r\n    event\r\n  ) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const handleEmailChange: React.FormEventHandler<HTMLInputElement> = (\r\n    event\r\n  ) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event) => {\r\n    event.preventDefault();\r\n    !onSubmit || onSubmit({ email, password });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`Form ${className}`}\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label htmlFor=\"email\" className=\"Form__Label\">\r\n        email\r\n      </label>\r\n      <Input\r\n        name=\"email\"\r\n        className=\"Form__Input\"\r\n        value={email}\r\n        onChange={handleEmailChange}\r\n      />\r\n      <label htmlFor=\"password\" className=\"Form__Label Form__Label--password\">\r\n        password\r\n      </label>\r\n      <Input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        className=\"Form__Input\"\r\n        value={password}\r\n        onChange={handlePasswordChange}\r\n      />\r\n      <Button className=\"Form__Button\" text={submitText.toLowerCase()} />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import \"./Login.scss\";\r\nimport Form, { FormBody } from \"../components/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../globals\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n\r\n  // Log out the user on page load to avoid multiple cookies\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const logout = async () => {\r\n      const res = await fetch(`${API_URL}/session`, {\r\n        method: \"DELETE\",\r\n      });\r\n      switch (res.status) {\r\n        case 200:\r\n          break;\r\n      }\r\n    };\r\n    if (isMounted) logout();\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  });\r\n\r\n  const handleSubmit = async (body: FormBody) => {\r\n    const res = await fetch(`${API_URL}/session`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    switch (res.status) {\r\n      case 401:\r\n        console.log(\"invalid input\");\r\n        break;\r\n      case 200:\r\n        console.log(\"redirecting to notes\");\r\n        history.push(\"/\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      {/* <h1 className=\"Login__Title\">Login</h1> */}\r\n      <Form className=\"Login__Form\" onSubmit={handleSubmit} />\r\n      <p className=\"Login__Paragraph\">\r\n        not a user yet? <br /> register an account{\" \"}\r\n        <a href=\"/register\">\r\n          <b>here</b>\r\n        </a>\r\n        .\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","// import { createImportSpecifier } from \"typescript\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Button from \"../../components/Button\";\r\nimport { API_URL } from \"../../globals\";\r\nimport \"./Header.scss\";\r\n\r\ninterface HeaderProps {}\r\n\r\nfunction Header(props: HeaderProps) {\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async () => {\r\n    const res = await fetch(`${API_URL}/session`, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    });\r\n    switch (res.status) {\r\n      case 200:\r\n        console.log(\"logout\");\r\n        history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"Header\">\r\n        <Button text=\"logout\" className=\"Header__Button\" onClick={onSubmit} />\r\n        <h1 className=\"Header__Title\">simple notes</h1>\r\n        <span className=\"Header__Circle Header__Circle--Dark\" />\r\n        <span className=\"Header__Circle Header__Circle--Medium\" />\r\n        <span className=\"Header__Circle Header__Circle--Light\" />\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"./SearchBar.scss\";\r\nimport Input, { InputProps } from \"../../components/Input\";\r\n\r\nexport interface SearchBarProps extends InputProps {\r\n  searchQuery: string;\r\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nfunction SearchBar({ searchQuery, setSearchQuery, ...props }: SearchBarProps) {\r\n  return (\r\n    <div className={`SearchBar ${props.className}`}>\r\n      <img className=\"SearchBar__Icon\" src=\"searchIcon.svg\" alt=\"\" />\r\n      <Input\r\n        {...props}\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.currentTarget.value)}\r\n        placeholder=\"search for notes\"\r\n        className={`SearchBar__Input`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import { createContext } from \"react\";\r\nimport { Note } from \"../../apiResources\";\r\n\r\ninterface NoteModalContextType {\r\n  state: {};\r\n  actions: {\r\n    openNoteModal: (note: Note) => void;\r\n  };\r\n}\r\n\r\nconst NoteModalContext = createContext<NoteModalContextType>({\r\n  state: {},\r\n  actions: {\r\n    openNoteModal: (note: Note) => {},\r\n  },\r\n});\r\n\r\nexport default NoteModalContext;\r\n","import { useContext } from \"react\";\r\n\r\nimport NoteModalContext from \"./context\";\r\n\r\nfunction useNoteModal() {\r\n  return useContext(NoteModalContext);\r\n}\r\n\r\nexport default useNoteModal;\r\n","import { useContext } from \"react\";\r\n\r\nimport NotesContext from \"./context\";\r\n\r\nfunction useNotes() {\r\n  return useContext(NotesContext);\r\n}\r\n\r\nexport default useNotes;\r\n","import useNoteModal from \"../../modules/noteModal/use\";\r\nimport useNotes from \"../../modules/notes/use\";\r\nimport \"./AddNoteButton.scss\";\r\n\r\nexport interface AddNoteButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className: string;\r\n}\r\n\r\nfunction AddNoteButton(props: AddNoteButtonProps) {\r\n  const {\r\n    actions: { createNote },\r\n  } = useNotes();\r\n  const {\r\n    actions: { openNoteModal },\r\n  } = useNoteModal();\r\n\r\n  const handleClick = async () => {\r\n    const newNote = await createNote();\r\n    if (newNote) openNoteModal(newNote);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={`AddNoteButton ${props.className}`}\r\n      onClick={handleClick}\r\n    >\r\n      <img className=\"AddNoteButon__Icon\" src=\"plusIcon.svg\" alt=\"\" />\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default AddNoteButton;\r\n","import \"./NoteContainer.scss\";\r\nimport { Note } from \"../../../apiResources\";\r\nimport useNoteModal from \"../../../modules/noteModal/use\";\r\n\r\ninterface NoteContainerProps {\r\n  note: Note;\r\n}\r\n\r\nfunction NoteContainer(props: NoteContainerProps) {\r\n  const {\r\n    actions: { openNoteModal },\r\n  } = useNoteModal();\r\n  return (\r\n    <div className=\"Note\" onClick={() => openNoteModal(props.note)}>\r\n      <h1 className=\"Note__Title\">{props.note.title}</h1>\r\n      <div className=\"Note__Contents\">{props.note.contents}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteContainer;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { Note } from \"../../apiResources\";\r\nimport useNotes from \"../../modules/notes/use\";\r\nimport NoteContainer from \"./notesGrid/NoteContainer\";\r\nimport \"./NotesGrid.scss\";\r\n\r\nexport interface NotesGridProps {\r\n  searchQuery: string;\r\n}\r\n\r\nfunction NotesGrid(props: NotesGridProps) {\r\n  const {\r\n    state: { notes },\r\n  } = useNotes();\r\n  const [filteredNotes, setFilteredNotes] = useState<Note[]>([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredNotes(filterNotes(notes, props.searchQuery));\r\n  }, [notes, props.searchQuery]);\r\n\r\n  const filterNotes = (notes: Note[], query: string) => {\r\n    if (!query) {\r\n      return notes;\r\n    }\r\n    return notes.filter((note) => {\r\n      const noteTitle = note.title.toLowerCase();\r\n      const noteContents = note.contents.toLowerCase();\r\n      return noteTitle.includes(query) || noteContents.includes(query);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"NotesGrid\">\r\n      {filteredNotes.length !== 0 ? (\r\n        filteredNotes.map((note: Note) => {\r\n          return <NoteContainer note={note} key={note.id} />;\r\n        })\r\n      ) : (\r\n        <p>Seems like there's nothing here...</p>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NotesGrid;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./Notes.scss\";\r\nimport Header from \"./notes/Header\";\r\nimport SearchBar from \"./notes/SearchBar\";\r\nimport AddNoteButton from \"./notes/AddNoteButton\";\r\nimport NotesGrid from \"./notes/NotesGrid\";\r\n\r\nfunction Notes() {\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n  return (\r\n    <div className=\"Notes\">\r\n      <Header />\r\n      <main>\r\n        <SearchBar\r\n          className=\"Notes__SearchBar\"\r\n          searchQuery={searchQuery}\r\n          setSearchQuery={setSearchQuery}\r\n        />\r\n        <NotesGrid searchQuery={searchQuery} />\r\n        <AddNoteButton className=\"Notes__AddNoteButton\" />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","import \"./IconButton.scss\";\r\n\r\nexport interface IconButtonProps {\r\n  iconPath: string;\r\n  alt: string;\r\n  onClick: React.MouseEventHandler<HTMLDivElement>;\r\n}\r\n\r\nfunction IconButton(props: IconButtonProps) {\r\n  return (\r\n    <div className=\"IconButton\" onClick={props.onClick}>\r\n      <img className=\"IconButton__Icon\" src={props.iconPath} alt={props.alt} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IconButton;\r\n","import \"./IconButtonBar.scss\";\r\n\r\nexport interface IconButtonBarProps {}\r\n\r\nconst IconButtonBar: React.FC<IconButtonBarProps> = (props) => {\r\n  return <div className=\"IconButtonBar\">{props.children}</div>;\r\n};\r\n\r\nexport default IconButtonBar;\r\n","import debounce from \"lodash.debounce\";\r\nimport { useEffect, useState, useRef, useCallback } from \"react\";\r\n\r\nimport { Note } from \"../../apiResources\";\r\nimport Button from \"../../components/Button\";\r\nimport IconButton from \"../../components/IconButton\";\r\nimport IconButtonBar from \"../../components/IconButtonBar\";\r\nimport { useEscapeKey, useOutsideAlerter } from \"../../utils/customHooks\";\r\nimport useNotes from \"../notes/use\";\r\nimport \"./NoteModal.scss\";\r\n\r\nconst DEBOUNCE_SAVE_DELAY_MS = 3000;\r\n\r\nexport interface NoteModalProps extends React.HTMLProps<HTMLDivElement> {\r\n  note: Note;\r\n  setShow: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nfunction NoteModal({ setShow, ...props }: NoteModalProps) {\r\n  const [title, setTitle] = useState(props.note?.title || \"\");\r\n  const [contents, setContents] = useState(props.note?.contents || \"\");\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const {\r\n    actions: { updateNote, deleteNote },\r\n  } = useNotes();\r\n  useOutsideAlerter(containerRef, closeNoteModal);\r\n  useEscapeKey(closeNoteModal);\r\n\r\n  // Update the note showing\r\n  useEffect(() => {\r\n    setTitle(props.note?.title || \"\");\r\n    setContents(props.note?.contents || \"\");\r\n  }, [props.note]);\r\n\r\n  // Autosave notes\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(\r\n    debounce((newNote: Note) => updateNote(newNote), DEBOUNCE_SAVE_DELAY_MS, {\r\n      maxWait: DEBOUNCE_SAVE_DELAY_MS,\r\n    }),\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    if (props.note) debouncedSave({ ...props.note, contents, title });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [contents, props.note, title]);\r\n\r\n  function closeNoteModal() {\r\n    console.log(\"closing\");\r\n    if (props.note) updateNote({ ...props.note, title, contents });\r\n    setShow(false);\r\n  }\r\n\r\n  return (\r\n    <div {...props} className=\"NoteModal\" ref={modalRef}>\r\n      <div className=\"NoteModal__Container\" ref={containerRef}>\r\n        <main className=\"NoteModal__Note\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.currentTarget.value)}\r\n            className=\"NoteModal__Title\"\r\n          />\r\n          <textarea\r\n            name=\"\"\r\n            placeholder=\"Contents\"\r\n            value={contents}\r\n            onChange={(e) => setContents(e.currentTarget.value)}\r\n            className=\"NoteModal__Contents\"\r\n            spellCheck={false}\r\n          ></textarea>\r\n        </main>\r\n        <footer className=\"NoteModal__Footer\">\r\n          <Button\r\n            text=\"close\"\r\n            className=\"NoteModal__CloseButton\"\r\n            onClick={closeNoteModal}\r\n          />\r\n          <IconButtonBar>\r\n            <IconButton\r\n              iconPath=\"trashIcon.svg\"\r\n              alt=\"delete\"\r\n              onClick={() => {\r\n                deleteNote(props.note);\r\n                closeNoteModal();\r\n              }}\r\n            />\r\n          </IconButtonBar>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteModal;\r\n","import { useEffect } from \"react\";\r\n\r\n/**\r\n * Performs the callback whenever the component is clicked outside of\r\n * @param ref The useRef reference to the object\r\n * @param callback A callback function\r\n */\r\nexport function useOutsideAlerter(\r\n  ref: React.MutableRefObject<any>,\r\n  callback: () => any\r\n) {\r\n  useEffect(() => {\r\n    function handleClickOutside(event: any) {\r\n      if (ref.current && !ref.current?.contains(event.target)) {\r\n        callback();\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref, callback]);\r\n}\r\n\r\n/**\r\n * Performs the callback whenever the escape key is pressed\r\n * @param callback A callback function\r\n */\r\nexport function useEscapeKey(callback: () => any) {\r\n  useEffect(() => {\r\n    const _handleEscKey = (event: any) => {\r\n      if (event.keyCode === 27) {\r\n        callback();\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", _handleEscKey, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", _handleEscKey, false);\r\n    };\r\n  }, [callback]);\r\n}\r\n","import { useState } from \"react\";\r\n\r\nimport { Note } from \"../../apiResources\";\r\nimport NoteModalContext from \"./context\";\r\nimport NoteModal from \"./NoteModal\";\r\n\r\nconst NoteModalProvider: React.FC<{}> = ({ children }) => {\r\n  const [note, setNote] = useState<Note>({ id: \"\", title: \"\", contents: \"\" });\r\n  const [show, setShow] = useState<boolean>(false);\r\n\r\n  const openNoteModal = (note: Note) => {\r\n    setShow(true);\r\n    setNote(note);\r\n  };\r\n\r\n  const value = {\r\n    state: {},\r\n    actions: { openNoteModal },\r\n  };\r\n\r\n  return (\r\n    <NoteModalContext.Provider value={value}>\r\n      {children}\r\n      {show && <NoteModal note={note} setShow={setShow} />}\r\n    </NoteModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteModalProvider;\r\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./Register.scss\";\r\nimport Form, { FormBody } from \"../components/Form\";\r\nimport { API_URL } from \"../globals\";\r\n\r\nexport interface RegisterProps {}\r\n\r\nconst Register: React.FC<RegisterProps> = (props) => {\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (body: FormBody) => {\r\n    const res = await fetch(`${API_URL}/users`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    switch (res.status) {\r\n      case 400:\r\n        console.log(\"invalid input\");\r\n        break;\r\n      case 200:\r\n        console.log(\"redirecting to notes\");\r\n        history.push(`/login`);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      <Form\r\n        className=\"Register__Form\"\r\n        onSubmit={handleSubmit}\r\n        submitText=\"register\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport \"./App.scss\";\r\nimport NotesProvider from \"./modules/notes/provider\";\r\nimport Login from \"./pages/Login\";\r\nimport Notes from \"./pages/Notes\";\r\nimport NoteModalProvider from \"./modules/noteModal/provider\";\r\nimport Register from \"./pages/Register\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <NotesProvider>\r\n              <NoteModalProvider>\r\n                <Notes />\r\n              </NoteModalProvider>\r\n            </NotesProvider>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}